#!/bin/bash
set -e

WORK_DIR=`pwd`
NUMARGS=$#
ARGS=$*

function logger() {
    TS=`date`
    echo "[$TS] $@"
}

function clone() {
  repo=$1
  directory=$2
  rm -rf ${directory}

  if [ $# -eq 2 ]; then
    logger "Cloning $repo"
    # FIXME: --depth 1 is breaking builds - investigate
    #git clone --depth 1 ${repo} ${directory}
    git clone ${repo} ${directory}
  else
    branch=$3
    logger "Cloning '$branch' branch of $repo"
    # FIXME: --depth 1 is breaking builds - investigate
    #git clone --depth 1 --single-branch -b ${branch} ${repo} ${directory}
    git clone --single-branch -b ${branch} ${repo} ${directory}
  fi
  cd ${WORK_DIR}/${directory}
  case "${repo}" in
    *cuml*) git submodule update --init --recursive ;;
    *) git submodule update --init --remote --recursive ;;
  esac
  git fetch --tags
  # FIXME: These lines result in an uncommitted file, and a 'dirty' tag to be added to some version strings - are they needed?
  #echo "${repo}" > current-commit.hash
  #git rev-parse HEAD >> current-commit.hash
  cd ${WORK_DIR}
}

function shouldClone {
    (( ${NUMARGS} == 0 )) || (echo " ${ARGS} " | grep -q " $1 ")
}

#:# Insert calls to "clone" for each of the RAPIDS repos defined in the config
runcommand ../../commands/utils/dumpRapidsCloneCmdsFromConfig.sh

logger "Done"
